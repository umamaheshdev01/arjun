// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  stall     Stall?   @relation(fields: [stallId], references: [id])
  stallId   String?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stall {
  id        String    @id @default(cuid())
  name      String
  admins    User[]
  items     Item[]
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Item {
  id          String      @id @default(cuid())
  name        String
  description String?
  price       Float
  stock       Int
  category    String
  image       String?
  stall       Stall       @relation(fields: [stallId], references: [id])
  stallId     String
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Order {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  stall     Stall       @relation(fields: [stallId], references: [id])
  stallId   String
  items     OrderItem[]
  status    OrderStatus @default(PENDING)
  total     Float
  token     String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id       String @id @default(cuid())
  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String
  item     Item   @relation(fields: [itemId], references: [id])
  itemId   String
  quantity Int
  price    Float
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum OrderStatus {
  PENDING
  PREPARING
  READY
  COMPLETED
  CANCELLED
} 